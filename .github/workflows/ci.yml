name: CI

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "*"

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Environment Variables
        run: |
          echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV
          echo "NEW_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV
          echo "PUBLISHED_VERSION=$(npm view arge version)" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Install Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Security Audit
        run: yarn audit || true

      - name: Outdated Packages
        run: yarn outdated || true

      - name: Coding Standards
        run: yarn lint

      - name: Test
        run: yarn test:coverage

      - name: Type
        run: yarn type

      - name: Build
        run: yarn build

      - name: Create Changeset
        run: |
          CHANGELOG=$(git --no-pager log ${{ env.PUBLISHED_VERSION }}..HEAD --format="%C(auto)%h %s")
          DELIMITER="$(openssl rand -hex 8)"

          echo "RELEASE_NOTES<<${DELIMITER}" >> $GITHUB_ENV
          echo -e "$CHANGELOG" >> $GITHUB_ENV
          echo "${DELIMITER}" >> $GITHUB_ENV

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: ${{ env.NEW_VERSION }}
          body: "${{ env.RELEASE_NOTES }}\n\n**Full Changelog**: https://github.com/adhamu/arge/compare/${{ env.PUBLISHED_VERSION }}...${{ env.NEW_VERSION }}"
          draft: false
          prerelease: false

      - name: Publish to Registry
        run: |
          pkg_version=${{ env.NEW_VERSION }}
          branch=${{ env.BRANCH }}

          if [[ $branch != "main" ]]; then
            yarn version --new-version "$pkg_version-beta$GITHUB_RUN_NUMBER" --no-git-tag-version
            yarn publish --tag beta --access public
          else
            yarn publish --access public
          fi
